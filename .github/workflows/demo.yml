name: Build & Distribute to Firebase

on:
  push:
    branches: 
      - main
  workflow_dispatch:
    inputs:
      test_mode:
        description: 'Test without building'
        type: boolean
        required: false
        default: false

jobs:
  distribute:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Only build real APK when not in test mode
      - name: Build APK
        if: ${{ !github.event.inputs.test_mode }}
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.0'
          args: build apk --release

      # Create dummy APK for testing
      - name: Create dummy APK
        if: ${{ github.event.inputs.test_mode }}
        run: |
          mkdir -p build/app/outputs/flutter-apk/
          echo "Dummy APK for testing" > build/app/outputs/flutter-apk/app-release.apk
          echo "âœ… Created dummy APK (test mode)"

      # Create service account file
      - name: Create service account file
        run: |
          echo '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}' > firebase-service-account.json

      # Distribute using proper service account auth
      - name: Distribute to Firebase
        env:
          GOOGLE_APPLICATION_CREDENTIALS: firebase-service-account.json
        run: |
          # Verify authentication
          gcloud auth list --filter=status:ACTIVE
          
          # Run distribution
          firebase appdistribution:distribute build/app/outputs/flutter-apk/app-release.apk \
            --app ${{ secrets.FIREBASE_APP_ID }} \
            --testers "mohamedhalim2991@gmail.com" \
            --release-notes "Run ${{ github.run_id }}"