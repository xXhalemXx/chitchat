name: Build & Distribute to Firebase

on:
  push:
    branches: 
      - main
  workflow_dispatch:
    inputs:
      test_mode:
        description: 'Test without building'
        type: boolean
        required: false
        default: false

jobs:
  distribute:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Only build real APK when not in test mode
      - name: Build APK
        if: ${{ !github.event.inputs.test_mode }}
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.0'
          args: build apk --release

      # Create dummy APK for testing
      - name: Create dummy APK
        if: ${{ github.event.inputs.test_mode }}
        run: |
          mkdir -p build/app/outputs/flutter-apk/
          echo "Dummy APK for testing" > build/app/outputs/flutter-apk/app-release.apk
          echo "âœ… Created dummy APK (test mode)"

      - name: Set up Node.js 20
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install Firebase CLI
        run: npm install -g firebase-tools@latest

      # ðŸ‘‡ Install jq for JSON validation
      - name: Install jq
        run: sudo apt-get install -y jq

      # ðŸ‘‡ Properly create and validate service account file
      - name: Create and validate service account file
        run: |
          # Create JSON file using heredoc
          cat <<EOF > firebase-service-account.json
          ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
          EOF
          
          # Validate JSON syntax
          echo "=== JSON Validation ==="
          jq . firebase-service-account.json
          
          echo "=== Service Account Email ==="
          jq -r .client_email firebase-service-account.json

      # Install Google Cloud SDK
      # - name: Install Google Cloud SDK
      #   run: |
      #     echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
      #     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key --keyring /usr/share/keyrings/cloud.google.gpg add -
      #     sudo apt-get update && sudo apt-get install -y google-cloud-cli

      # Authenticate
      - name: Authenticate with Service Account
        run: |
          gcloud auth activate-service-account --key-file=firebase-service-account.json
          gcloud config set project chitchat-17a50  # ðŸ‘ˆ Replace with your project ID
          gcloud auth list

      # Distribute to Firebase
      - name: Distribute to Firebase
        run: |
          firebase appdistribution:distribute build/app/outputs/flutter-apk/app-release.apk \
            --app ${{ secrets.FIREBASE_APP_ID }} \
            --testers "mohamedhalim2991@gmail.com" \
            --release-notes "Run ${{ github.run_id }}"